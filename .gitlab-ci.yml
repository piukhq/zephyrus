stages:
  - test
  - build
  - deploy

test:pytest: &test
  stage: test
  image: ghcr.io/binkhq/python:3.9
  before_script:
    - pipenv install --dev --system --deploy --ignore-pipfile
  script:
    - pytest --verbose --cov app --cov-report term-missing app/tests/unit

test:complexity:
  <<: *test
  script:
    - xenon --max-average A --max-modules B --max-absolute B .

test:style:
  <<: *test
  script:
    - flake8
    - black --line-length 120 --check .
    - isort --line-length 120 --profile black --check .

test:type-check:
  <<: *test
  script:
    - mypy --ignore-missing-imports app

build:develop: &build
  stage: build
  needs: ["test:pytest", "test:complexity", "test:style", "test:type-check"]
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - export CTAG=$(echo -n "$CI_PIPELINE_CREATED_AT" | sed s/\://g)
  script:
    - docker build --pull --tag "$CI_REGISTRY/$CI_PROJECT_NAME:$CTAG" .
    - docker push "$CI_REGISTRY/$CI_PROJECT_NAME:$CTAG"
  only:
    - develop

build:tag:
  <<: *build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - export CTAG=$CI_COMMIT_TAG
  only:
    - tags

deploy:dev: &deploy
  stage: deploy
  needs: ["build:develop"]
  image: binkcore.azurecr.io/tagbot:latest
  environment:
    name: dev
  before_script:
    - export CTAG=$(echo -n "$CI_PIPELINE_CREATED_AT" | sed s/\://g)
  script:
    - tagbot
      --username "$CI_REGISTRY_USER"
      --password "$CI_REGISTRY_PASSWORD"
      --source "$CI_REGISTRY/$CI_PROJECT_NAME:$CTAG"
      --tag "$CI_ENVIRONMENT_NAME-$CTAG"
    - tagbot
      --username "$CI_REGISTRY_USER"
      --password "$CI_REGISTRY_PASSWORD"
      --source "$CI_REGISTRY/$CI_PROJECT_NAME:$CTAG"
      --tag "$CI_ENVIRONMENT_NAME"
  only:
    - develop

deploy:staging:
  <<: *deploy
  needs: ["build:tag"]
  environment:
    name: staging
  before_script:
    - export CTAG=$CI_COMMIT_TAG
  only:
    - tags

deploy:prod:
  <<: *deploy
  needs: ["build:tag"]
  environment:
    name: prod
  before_script:
    - export CTAG=$CI_COMMIT_TAG
  when: manual
  only:
    - tags
