stages:
  - tests
  - build
  - tagging

tests:
  stage: tests
  script:
    - pipenv install --dev --system --deploy --ignore-pipfile
    - pytest --verbose --cov app --cov-report term-missing app/tests/unit

complexity:
  stage: tests
  script:
    - xenon --max-average A --max-modules B --max-absolute B .

style:
  stage: tests
  before_script:
    - pip install black
  script:
    - flake8 && black --line-length 120 --check .

type-check:
  stage: tests
  script:
    - mypy --ignore-missing-imports app

build-latest:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/zephyrus:latest" .
    - docker push "$CI_REGISTRY/zephyrus:latest"
  only:
    - develop

tag-develop:
  stage: tagging
  image: binkops.azurecr.io/tagbot:latest
  environment: dev
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/zephyrus:latest" --tag "develop-$CI_COMMIT_SHORT_SHA"
  only:
    - develop
